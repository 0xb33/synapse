from twisted.python.threadpool import ThreadPool
from twisted.internet.defer import Deferred
from .interfaces import IReactorThreads

from typing import List

def deferToThreadPool(
    reactor: IReactorThreads, threadpool: ThreadPool, f, *args, **kwargs
) -> Deferred: ...
def deferToThread(f, *args, **kwargs): ...
def callMultipleInThread(tupleList: List) -> None: ...
def blockingCallFromThread(reactor: IReactorThreads, f, *a, **kw): ...
